name: 'Pull Request'

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  security-events: write
  packages: read

jobs:
  security_checks:
    name: Security Analysis (CodeQL)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          build-mode: manual
          queries: security-extended,security-and-quality

      - name: Build (for CodeQL)
        working-directory: backend
        run: ./gradlew --no-daemon clean assemble -x test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

  build_and_test:
    name: Build and Test (JaCoCo)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permissions for Gradle
        run: chmod +x backend/gradlew

      - name: Run Tests + Coverage (all modules)
        working-directory: backend
        run: ./gradlew --no-daemon clean verifyCoverageAll jacocoRootReport

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results
          path: backend/**/build/test-results/test/*.xml

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage
          path: backend/build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml

  upload_test_report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: test-results

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          artifact: test-results
          name: Test Report
          path: '**/*.xml'
          reporter: java-junit
          fail-on-error: false

  coverage_comment:
    name: Coverage Comment (JaCoCo)
    runs-on: ubuntu-latest
    needs: build_and_test
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download Coverage Artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      
      - name: Jacoco Report
        uses: madrapps/jacoco-report@v1.7
        with:
          paths: |
            coverage/backend/build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
          title: 'Code Coverage (JaCoCo)'

server:
  port: 8080

spring:
  application:
    name: backend
  main:
    banner-mode: "console"
  config:
    import:
      - optional:file:.env[.properties]
      - optional:file:../.env[.properties]
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/demo_db}
    username: ${DB_USERNAME:demo}
    password: ${DB_PASSWORD:demo}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true
      show-details: "never"

logging:
  level:
    root: INFO
    com.example: INFO

app:
  security:
    routes:
      public-routes:
        - pattern: /api/health
        - pattern: /dev/**
        - pattern: /auth/**
      secure-routes:
        - pattern: /api/admin/**
          role: ADMIN
        - pattern: /api/**
    jwt:
      issuer: "https://example-issuer"
      hmac-secret: "${JWT_SECRET:change-me}"
      authorities-claim: "roles"
  base-url: "http://localhost:8080"
  email:
    from: "no-reply@example.com"
    enabled: true
  auth:
    refresh-ttl-days: 14
    refresh-cookie-name: refreshToken
